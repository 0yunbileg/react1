{"version":3,"sources":["turbopack:///[project]/components/table/table.tsx","turbopack:///[project]/components/table/tableItem.tsx","turbopack:///[project]/components/table/details.tsx","turbopack:///[project]/components/table/propertySelector.tsx"],"sourcesContent":["\"use client\"\nimport React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport TableItem from \"./tableItem\"\nimport Details from \"./details\"\nimport PropertySelector from \"./propertySelector\"\n\ninterface Element {\n  name: string\n  appearance?: string\n  atomic_mass: number\n  boil?: number\n  category: string\n  density?: number\n  discovered_by?: string\n  melt?: number\n  molar_heat?: number\n  named_by?: string\n  number: number\n  period: number\n  group?: number\n  phase: string\n  source: string\n  bohr_model_image?: string\n  bohr_model_3d?: string\n  spectral_img?: string\n  summary: string\n  symbol: string\n  xpos: number\n  ypos: number\n  wxpos?: number\n  wypos?: number\n  shells: number[]\n  electron_configuration: string\n  electron_configuration_semantic: string\n  electron_affinity?: number\n  electronegativity_pauling?: number\n  ionization_energies: number[]\n  \"cpk-hex\"?: string\n  image?: {\n    title: string\n    url: string\n    attribution: string\n  }\n}\n\nconst Table: React.FC = () => {\n  const [elements, setElements] = useState<Element[]>([])\n  const [property, setProperty] = useState<string>(\"category\")\n  const [selectedElement, setSelectedElement] = useState<Element | null>(null)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(\n        \"https://raw.githubusercontent.com/Bowserinator/Periodic-Table-JSON/master/PeriodicTableJSON.json\"\n      )\n      const data = await res.json()\n      setElements(data.elements)\n    }\n    fetchData()\n  }, [])\n\n  const handleSelect = (element: Element) => {\n    setSelectedElement(element)\n    setSidebarOpen(true)\n  }\n\n  const handleCloseSidebar = () => {\n    setSidebarOpen(false)\n    setSelectedElement(null)\n  }\n\n  return (\n    <div className='flex'>\n      <div\n        className={`flex-1 p-6 transition-all duration-300 ${\n          sidebarOpen ? \"lg:mr-2\" : \"\"\n        }`}\n      >\n        <h1 className='text-2xl font-bold mb-4'>Periodic Table</h1>\n\n        <PropertySelector property={property} onChange={setProperty} />\n\n        <div className='grid grid-cols-18 gap-2 min-w-[1220px]'>\n          {elements.map((element) => (\n            <div\n              key={element.number}\n              style={{\n                gridColumnStart: element.xpos,\n                gridRowStart: element.ypos,\n              }}\n            >\n              <TableItem\n                key={element.number}\n                element={element}\n                property={property}\n                onClick={handleSelect}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {sidebarOpen && (\n        <Details\n          selectedElement={selectedElement}\n          onClose={handleCloseSidebar}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Table\n","import React from \"react\"\nimport Image from \"next/image\"\n\ninterface Element {\n  name: string\n  appearance?: string\n  atomic_mass: number\n  boil?: number\n  category: string\n  density?: number\n  discovered_by?: string\n  melt?: number\n  molar_heat?: number\n  named_by?: string\n  number: number\n  period: number\n  group?: number\n  phase: string\n  source: string\n  bohr_model_image?: string\n  bohr_model_3d?: string\n  spectral_img?: string\n  summary: string\n  symbol: string\n  xpos: number\n  ypos: number\n  wxpos?: number\n  wypos?: number\n  shells: number[]\n  electron_configuration: string\n  electron_configuration_semantic: string\n  electron_affinity?: number\n  electronegativity_pauling?: number\n  ionization_energies: number[]\n  \"cpk-hex\"?: string\n  image?: {\n    title: string\n    url: string\n    attribution: string\n  }\n}\ninterface Props {\n  element: Element\n  property: string\n  onClick: (element: Element) => void\n}\n\nconst TableItem: React.FC<Props> = ({ element, property, onClick }) => {\n  let bgColor = \"#f1f5f9\"\n\n  if (property === \"category\") {\n    const colors: Record<string, string> = {\n      \"noble gas\": \"#a3e635\",\n      \"alkali metal\": \"#f87171\",\n      \"alkaline earth metal\": \"#facc15\",\n      \"transition metal\": \"#60a5fa\",\n      \"post-transition metal\": \"#fbbf24\",\n      metalloid: \"#34d399\",\n      \"diatomic nonmetal\": \"#c084fc\",\n      lanthanide: \"#fb923c\",\n      actinide: \"#f472b6\",\n    }\n    bgColor = colors[element.category] || \"#e5e7eb\"\n  }\n\n  if (property === \"boil\" && element.boil) {\n    const max = 6000\n    const intensity = Math.min(element.boil / max, 1)\n    const red = Math.floor(255 * intensity)\n    bgColor = `rgb(${red}, 100, 100)`\n  }\n\n  if (property === \"melt\" && element.melt) {\n    const max = 3700\n    const intensity = Math.min(element.melt / max, 1)\n    const green = Math.floor(255 * intensity)\n    bgColor = `rgb(100, ${green}, 100)`\n  }\n\n  if (property === \"density\" && element.density) {\n    const max = 22\n    const intensity = Math.min(element.density / max, 1)\n    const blue = Math.floor(255 * intensity)\n    bgColor = `rgb(100, 100, ${blue})`\n  }\n\n  if (property === \"atomic_mass\" && element.atomic_mass) {\n    const max = 300\n    const intensity = Math.min(element.atomic_mass / max, 1)\n    const blue = Math.floor(255 * intensity)\n    bgColor = `rgb(100, ${blue}, ${blue})`\n  }\n\n  return (\n    <div\n      key={element.number}\n      className='p-1 rounded shadow text-center transition hover:scale-105 hover:shadow-lg min-w-[60px]'\n      style={{ backgroundColor: bgColor }}\n      onClick={() => onClick(element)}\n    >\n      <p className='m-0'>{element.number}</p>\n      <p className='m-0 font-bold'>{element.symbol}</p>\n      <p className='m-0 hidden xl:block'>{element.atomic_mass.toFixed(2)}</p>\n    </div>\n  )\n}\n\nexport default TableItem\n","\"use client\";\nimport React from \"react\";\nimport Image from \"next/image\";\n\ninterface Element {\n  name: string;\n  appearance?: string;\n  atomic_mass: number;\n  boil?: number;\n  category: string;\n  density?: number;\n  discovered_by?: string;\n  melt?: number;\n  molar_heat?: number;\n  named_by?: string;\n  number: number;\n  period: number;\n  group?: number;\n  phase: string;\n  source: string;\n  bohr_model_image?: string;\n  bohr_model_3d?: string;\n  spectral_img?: string;\n  summary: string;\n  symbol: string;\n  xpos: number;\n  ypos: number;\n  wxpos?: number;\n  wypos?: number;\n  shells: number[];\n  electron_configuration: string;\n  electron_configuration_semantic: string;\n  electron_affinity?: number;\n  electronegativity_pauling?: number;\n  ionization_energies: number[];\n  \"cpk-hex\"?: string;\n  image?: {\n    title: string;\n    url: string;\n    attribution: string;\n  };\n}\n\ninterface Props {\n  selectedElement: Element | null;\n  onClose: () => void;\n}\n\nconst Details: React.FC<Props> = ({ selectedElement, onClose }) => {\n  return (\n    <div className=\"hidden lg:flex flex-col w-96 p-6 bg-black/70 backdrop-blur-md text-white shadow-[0_0_30px_rgba(143,230,74,0.4)] rounded-2xl m-4 mt-5\">\n      {selectedElement && (\n        <>\n          {/* Symbol + Atomic Number */}\n          <div className=\"!font-bold text-[#8FE64A] flex items-center justify-between mb-4\">\n            <div>\n              <h2 className=\"text-4xl font-extrabold text-[#8FE64A]\">\n                {selectedElement.symbol}\n              </h2>\n              <p className=\"text-sm opacity-80\">#{selectedElement.number}</p>\n            </div>\n\n            {/* Bohr Model */}\n            {selectedElement.bohr_model_image && (\n              <Image\n                src={selectedElement.bohr_model_image}\n                alt={`${selectedElement.name} Bohr model`}\n                width={80}\n                height={80}\n                className=\"rounded-lg shadow-md\"\n              />\n            )}\n          </div>\n\n          {/* Real Element Image */}\n          {selectedElement.image?.url && (\n            <div className=\"mb-4 flex flex-col items-center\">\n              <Image\n                src={selectedElement.image.url}\n                alt={selectedElement.image.title || selectedElement.name}\n                width={160}\n                height={160}\n                className=\"rounded-xl shadow-lg object-contain\"\n              />\n              {selectedElement.image.attribution && (\n                <p className=\"mt-2 text-xs text-gray-400 text-center\">\n                  {selectedElement.image.attribution}\n                </p>\n              )}\n            </div>\n          )}\n\n          {/* Info */}\n          <h3 className=\"text-xl font-semibold mb-2\">{selectedElement.name}</h3>\n          <p className=\"text-sm italic opacity-80 mb-4\">\n            {selectedElement.category}\n          </p>\n\n          <div className=\"space-y-1 text-sm\">\n            <p>\n              <strong className=\"text-[#8FE64A]\">Atomic Mass:</strong>{\" \"}\n              {selectedElement.atomic_mass}\n            </p>\n            <p>\n              <strong className=\"text-[#8FE64A]\">\n                Electron Configuration:\n              </strong>{\" \"}\n              {selectedElement.electron_configuration}\n            </p>\n          </div>\n\n          {/* Summary */}\n          <p className=\"mt-4 text-sm leading-relaxed\">\n            {selectedElement.summary}\n          </p>\n\n          <div className=\"flex w-full justify-between items-center\">\n            {/* Source */}\n            {selectedElement.source && (\n              <a\n                href={selectedElement.source}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"mt-4 inline-block text-[#8FE64A] hover:underline text-sm\"\n              >\n                Learn more ↗\n              </a>\n            )}\n\n            <button\n              className=\"self-end mb-2 px-3 py-1 text-sm !rounded-full bg-[#8FE64A] text-black font-semibold hover:bg-[#7ED957] transition\"\n              onClick={onClose}\n            >\n              ✕ Close\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Details;\n","\"use client\"\nimport React from \"react\"\n\ninterface PropertySelectorProps {\n  property: string\n  onChange: (value: string) => void\n  className?: string\n}\n\nconst PropertySelector: React.FC<PropertySelectorProps> = ({\n  property,\n  onChange,\n  className,\n}) => {\n  let bgColorHighest = \"#f1f5f9\"\n  let bgColorLowest = \"#f1f5f9\"\n\n  if (property === \"category\") {\n    const colors: Record<string, string> = {\n      \"noble gas\": \"#a3e635\",\n      \"alkali metal\": \"#f87171\",\n      \"alkaline earth metal\": \"#facc15\",\n      \"transition metal\": \"#60a5fa\",\n      \"post-transition metal\": \"#fbbf24\",\n      metalloid: \"#34d399\",\n      \"diatomic nonmetal\": \"#c084fc\",\n      lanthanide: \"#fb923c\",\n      actinide: \"#f472b6\",\n    }\n    // bgColor = colors[element.category] || \"#e5e7eb\"\n  }\n\n  if (property === \"boil\") {\n    bgColorHighest = `rgb(225, 100, 100)`\n    bgColorLowest = `rgb(0, 100, 100)`\n  }\n\n  if (property === \"melt\") {\n    bgColorHighest = `rgb(100, 225, 100)`\n    bgColorLowest = `rgb(100, 0, 100)`\n  }\n\n  if (property === \"density\") {\n    bgColorHighest = `rgb(100, 100, 225)`\n    bgColorLowest = `rgb(100, 100, 0)`\n  }\n\n  if (property === \"atomic_mass\") {\n    bgColorHighest = `rgb(100, 225, 225)`\n    bgColorLowest = `rgb(100, 0, 0)`\n  }\n\n  return (\n    <div className='flex gap-4'>\n      <select\n        value={property}\n        onChange={(e) => onChange(e.target.value)}\n        className={`mb-4 p-2 border rounded ${className || \"\"}`}\n      >\n        <option value='category'>Category</option>\n        <option value='boil'>Boiling Point</option>\n        <option value='melt'>Melting Point</option>\n        <option value='density'>Density</option>\n        <option value='atomic_mass'>Atomic Mass</option>\n      </select>\n\n      {property !== \"category\" && (\n        <div>\n          <div\n            className={`flex justify-between px-4 items-center w-[400px] h-[40px] rounded-full overflow-hidden ${className}`}\n            style={{\n              background: `linear-gradient(to right, ${bgColorHighest}, ${bgColorLowest})`,\n            }}\n          >\n            <span>Highest</span>\n            <span>Lowest</span>\n          </div>\n        </div>\n      )}\n\n      <div>\n        \n      </div>\n    </div>\n  )\n}\n\nexport default PropertySelector\n"],"names":[],"mappings":"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"}